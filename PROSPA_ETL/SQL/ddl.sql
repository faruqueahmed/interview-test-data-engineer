
DROP DATABASE  IF EXISTS PROSPAGOLD;

CREATE DATABASE PROSPAGOLD;


USE PROSPAGOLD;

CREATE TABLE NATION (
  N_NATIONKEY INTEGER  NOT NULL,
  N_NAME      TEXT NOT NULL,
  N_REGIONKEY INTEGER NOT NULL,
  N_COMMENT   TEXT , 
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);

CREATE TABLE REGION (
  R_REGIONKEY INTEGER  NOT NULL,
  R_NAME      TEXT NOT NULL,
  R_COMMENT   TEXT, 
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);

CREATE TABLE PART (
  P_PARTKEY     INTEGER  NOT NULL,
  P_NAME        TEXT NOT NULL,
  P_MFGR        TEXT NOT NULL,
  P_BRAND       TEXT NOT NULL,
  P_TYPE        TEXT NOT NULL,
  P_SIZE        INTEGER NOT NULL,
  P_CONTAINER   TEXT NOT NULL,
  P_RETAILPRICE INTEGER NOT NULL,
  P_COMMENT     TEXT NOT NULL, 
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);

CREATE TABLE SUPPLIER (
  S_SUPPKEY   INTEGER  NOT NULL,
  S_NAME      TEXT NOT NULL,
  S_ADDRESS   TEXT NOT NULL,
  S_NATIONKEY INTEGER NOT NULL,
  S_PHONE     TEXT NOT NULL,
  S_ACCTBAL   INTEGER NOT NULL,
  S_COMMENT   TEXT NOT NULL , 
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);

CREATE TABLE PARTSUPP (
  PS_PARTKEY    INTEGER NOT NULL,
  PS_SUPPKEY    INTEGER NOT NULL,
  PS_AVAILQTY   INTEGER NOT NULL,
  PS_SUPPLYCOST INTEGER NOT NULL,
  PS_COMMENT    TEXT NOT NULL , 
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);

CREATE TABLE CUSTOMER (
  C_CUSTKEY    INTEGER  NOT NULL,
  C_NAME       TEXT NOT NULL,
  C_ADDRESS    TEXT NOT NULL,
  C_NATIONKEY  INTEGER NOT NULL,
  C_PHONE      TEXT NOT NULL,
  C_ACCTBAL    INTEGER   NOT NULL,
  C_MKTSEGMENT TEXT NOT NULL,
  C_COMMENT    TEXT NOT NULL , 
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);

CREATE TABLE LINEITEM (
  L_ORDERKEY      INTEGER NOT NULL,
  L_PARTKEY       INTEGER NOT NULL,
  L_SUPPKEY       INTEGER NOT NULL,
  L_LINENUMBER    INTEGER NOT NULL,
  L_QUANTITY      INTEGER NOT NULL,
  L_EXTENDEDPRICE INTEGER NOT NULL,
  L_DISCOUNT      INTEGER NOT NULL,
  L_TAX           INTEGER NOT NULL,
  L_RETURNFLAG    TEXT NOT NULL,
  L_LINESTATUS    TEXT NOT NULL,
  L_SHIPDATE      DATE NOT NULL,
  L_COMMITDATE    DATE NOT NULL,
  L_RECEIPTDATE   DATE NOT NULL,
  L_SHIPINSTRUCT  TEXT NOT NULL,
  L_SHIPMODE      TEXT NOT NULL,
  L_COMMENT       TEXT NOT NULL, 
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);

CREATE TABLE ORDERS (
  O_ORDERKEY      INTEGER   NOT NULL,
  O_CUSTKEY       INTEGER NOT NULL,
  O_ORDERSTATUS   TEXT NOT NULL,
  O_TOTALPRICE    INTEGER NOT NULL,
  O_ORDERDATE     DATE NOT NULL,
  O_ORDERPRIORITY TEXT NOT NULL,  
  O_CLERK         TEXT NOT NULL,
  O_SHIPPRIORITY  INTEGER NOT NULL,
  O_COMMENT       TEXT NOT NULL ,
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
)
PARTITION BY RANGE(TO_DAYS(O_ORDERDATE ))
(
    PARTITION p20190701 VALUES LESS THAN (TO_DAYS('2019-07-02')),
    PARTITION p20190702 VALUES LESS THAN (TO_DAYS('2019-07-03')),
    PARTITION p20190703 VALUES LESS THAN (TO_DAYS('2019-07-04')),
    PARTITION p20190704 VALUES LESS THAN (TO_DAYS('2019-07-05')),
    PARTITION future VALUES LESS THAN MAXVALUE
  );

CREATE TABLE  CUSTOMER_STATUS(
  C_CUSTKEY    INTEGER  NOT NULL,
  C_ACCTBAL    INTEGER   NOT NULL,
  C_STATUS     TEXT NOT NULL 
);


CREATE TABLE PART_SUPP_DIM (
  PS_PARTKEY    INTEGER NOT NULL,
  PS_SUPPKEY    INTEGER NOT NULL,
  PS_AVAILQTY   INTEGER NOT NULL,
  PS_SUPPLYCOST INTEGER NOT NULL,
  S_NAME        TEXT NOT NULL,
  S_ADDRESS     TEXT NOT NULL,
  S_NATIONKEY   INTEGER NOT NULL,
  S_PHONE       TEXT NOT NULL,
  S_ACCTBAL     INTEGER NOT NULL,
  P_NAME        TEXT NOT NULL,
  P_MFGR        TEXT NOT NULL,
  P_BRAND       TEXT NOT NULL,
  P_TYPE        TEXT NOT NULL,
  P_SIZE        INTEGER NOT NULL,
  P_CONTAINER   TEXT NOT NULL,
  P_RETAILPRICE INTEGER NOT NULL,
  INGEST_TIME INTEGER NOT NULL 
  );

  
  CREATE TABLE CUSTOMER_DIM (
  C_CUSTKEY    INTEGER  NOT NULL,
  C_NAME       TEXT NOT NULL,
  C_ADDRESS    TEXT NOT NULL,
  C_NATIONKEY  INTEGER NOT NULL,
  C_PHONE      TEXT NOT NULL,
  C_ACCTBAL    INTEGER   NOT NULL,
  C_MKTSEGMENT TEXT NOT NULL,
  C_STATUS    TEXT NOT NULL ,
  N_NAME  TEXT NOT NULL,
  R_NAME  TEXT NOT NULL,
  FILENAME TEXT NOT NULL,
  INGEST_TIME INTEGER NOT NULL
);


CREATE TABLE ORDER_ITEM_FACT(
  L_ORDERKEY      INTEGER NOT NULL,
  L_PARTKEY       INTEGER NOT NULL,
  L_SUPPKEY       INTEGER NOT NULL,
  L_LINENUMBER    INTEGER NOT NULL,
  L_QUANTITY      INTEGER NOT NULL,
  L_EXTENDEDPRICE INTEGER NOT NULL,
  L_DISCOUNT      INTEGER NOT NULL,
  L_TAX           INTEGER NOT NULL,
  L_RETURNFLAG    TEXT NOT NULL,
  L_LINESTATUS    TEXT NOT NULL,
  L_SHIPDATE      DATE NOT NULL,
  L_COMMITDATE    DATE NOT NULL,
  L_RECEIPTDATE   DATE NOT NULL,
  L_SHIPINSTRUCT  TEXT NOT NULL,
  L_SHIPMODE      TEXT NOT NULL,
  L_COMMENT       TEXT NOT NULL,
  LINEITEM_REVENUE  INTEGER NOT NULL,
  O_CUSTKEY      INTEGER NOT NULL,
  O_ORDERSTATUS   TEXT NOT NULL,
  O_ORDERDATE     DATE NOT NULL )
  PARTITION BY RANGE(TO_DAYS(O_ORDERDATE ))
(   PARTITION p201701  VALUES LESS THAN (TO_DAYS('2017-02-01')),
    PARTITION p201702  VALUES LESS THAN (TO_DAYS('2017-03-01')),
    PARTITION p201703  VALUES LESS THAN (TO_DAYS('2017-04-01')),
    PARTITION p201704  VALUES LESS THAN (TO_DAYS('2017-05-01')),
    PARTITION p201705  VALUES LESS THAN (TO_DAYS('2017-06-01')),
    PARTITION p201706  VALUES LESS THAN (TO_DAYS('2017-07-01')),
    PARTITION p201707  VALUES LESS THAN (TO_DAYS('2017-08-01')),
    PARTITION p201708  VALUES LESS THAN (TO_DAYS('2017-09-01')),
    PARTITION p201709  VALUES LESS THAN (TO_DAYS('2017-10-01')),
    PARTITION p201710  VALUES LESS THAN (TO_DAYS('2017-11-01')),
    PARTITION p201711  VALUES LESS THAN (TO_DAYS('2017-12-01')),
    PARTITION p201712  VALUES LESS THAN (TO_DAYS('2018-01-01')),
    PARTITION p201801  VALUES LESS THAN (TO_DAYS('2018-02-01')),
    PARTITION p201802  VALUES LESS THAN (TO_DAYS('2018-03-01')),
    PARTITION p201803  VALUES LESS THAN (TO_DAYS('2018-04-01')),
    PARTITION p201804  VALUES LESS THAN (TO_DAYS('2018-05-01')),
    PARTITION p201805  VALUES LESS THAN (TO_DAYS('2018-06-01')),
    PARTITION p201806  VALUES LESS THAN (TO_DAYS('2018-07-01')),
    PARTITION p201807  VALUES LESS THAN (TO_DAYS('2018-08-01')),
    PARTITION p201808  VALUES LESS THAN (TO_DAYS('2018-09-01')),
    PARTITION p201809  VALUES LESS THAN (TO_DAYS('2018-10-01')),
    PARTITION p201810  VALUES LESS THAN (TO_DAYS('2018-11-01')),
    PARTITION p201811  VALUES LESS THAN (TO_DAYS('2018-12-01')),
    PARTITION p201812  VALUES LESS THAN (TO_DAYS('2019-01-01')),
    PARTITION future VALUES LESS THAN MAXVALUE
  );
  
 

